/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _timetable = __webpack_require__(1);

var _main_menu = __webpack_require__(2);

var _main = __webpack_require__(3);

(0, _main_menu.set_handler_main_menu)();
(0, _main.set_handler_main_page_arrow)();
(0, _timetable.set_handler_timetable)();

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
function insert_iframe_youtube(lesson_element) {
  if (lesson_element.getElementsByClassName('media__iframe').length > 0) {
    return false;
  }

  var iframe = document.createElement('iframe');
  iframe.setAttribute('frameborder', '0');
  iframe.classList.add('media__iframe');

  var media = lesson_element.getElementsByClassName('content__media');
  if (media.length !== 1) {
    return false;
  }

  iframe.setAttribute('src', media[0].dataset.url);
  media[0].appendChild(iframe);
}

function hide_lessons_descriptions() {
  var descriptions = document.getElementsByClassName('lesson__description');
  for (var i = 0; i < descriptions.length; i++) {
    descriptions[i].classList.add('lesson__description--hidden');
  }
}

function switch_lesson_description() {
  var description = this.getElementsByClassName('lesson__description');

  if (description[0].classList.contains('lesson__description--hidden') === true) {
    hide_lessons_descriptions();
    description[0].classList.remove('lesson__description--hidden');
    insert_iframe_youtube(this);
  } else {
    hide_lessons_descriptions();
  }
  return false;
}

function disable_buttons(element) {
  var buttons = element.getElementsByClassName('buttons-month__item');
  for (var i = 0; i < buttons.length; i++) {
    buttons[i].classList.remove('buttons-month__item--active');
  }
}

function show_month_lesson(month, count_lessons_in_month) {

  var lessons = document.getElementsByClassName('lessons__item');
  for (var i = 0; i < lessons.length; i++) {
    lessons[i].classList.add('lessons__item--hidden');
  }
  var end_lesson_in_month = count_lessons_in_month * month;
  var begin_lesson_in_month = end_lesson_in_month - count_lessons_in_month;

  if (lessons.length < begin_lesson_in_month) {
    return null;
  }
  if (lessons.length < end_lesson_in_month) {
    end_lesson_in_month = lessons.length;
  }
  for (var _i = begin_lesson_in_month; _i < end_lesson_in_month; _i++) {
    lessons[_i].classList.remove('lessons__item--hidden');
  }
}

function switch_month_lesson() {
  var count_lessons_in_month = 4;
  disable_buttons(this.parentNode);
  this.classList.add('buttons-month__item--active');

  for (var i = 0; i < this.classList.length; i++) {
    if (this.classList[i].indexOf('month-') === 0) {
      // 'month-'.length === 6
      var month = parseInt(this.classList[i].slice(6), 10);
      show_month_lesson(month, count_lessons_in_month);
    }
  }
}

var set_handler_timetable = exports.set_handler_timetable = function set_handler_timetable() {
  // Навешиваем хендлеры на нажатие на заголовок урока
  var lesson_titles = document.getElementsByClassName('lesson-tittle__text');
  if (lesson_titles.length > 0) {
    for (var i = 0; i < lesson_titles.length; i++) {
      lesson_titles[i].addEventListener('click', switch_lesson_description.bind(lesson_titles[i].parentNode));
    }
  }

  // Навешиваем хендлеры на нажатие на кнопки выбора месяца
  var buttons_month = document.getElementsByClassName('buttons-month__item');
  if (buttons_month.length > 0) {
    for (var _i2 = 0; _i2 < buttons_month.length; _i2++) {
      buttons_month[_i2].addEventListener('click', switch_month_lesson.bind(buttons_month[_i2]));
    }
  }
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
function show_dropdown_menu() {
  var dropdown_menu = this.getElementsByClassName('dropdown-js');
  if (dropdown_menu.length === 0) {
    return null;
  }
  dropdown_menu[0].classList.remove('dropdown-hide');
}

function hide_dropdown_menu() {
  var dropdown_menu = this.getElementsByClassName('dropdown-js');
  if (dropdown_menu.length === 0) {
    return null;
  }
  dropdown_menu[0].classList.add('dropdown-hide');
}

var set_handler_main_menu = exports.set_handler_main_menu = function set_handler_main_menu() {
  // Навешиваем хендлеры на нажатие на заголовок урока
  var dropdown_menus = document.getElementsByClassName('dropdown-js-control');
  if (dropdown_menus.length > 0) {
    for (var i = 0; i < dropdown_menus.length; i++) {
      dropdown_menus[i].addEventListener('mouseover', show_dropdown_menu.bind(dropdown_menus[i]));
      dropdown_menus[i].addEventListener('mouseout', hide_dropdown_menu.bind(dropdown_menus[i]));
    }
  }
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
function find_first_active_slide(slider_items) {
  // Функция возвращает номер первого активного элемента в слайдере
  // Если нет активных, то возвращает null.
  for (var i = 0; i < slider_items.length; i++) {
    if (slider_items[i].classList.contains('slide_disable') == false) {
      return i;
    }
  }
  return null;
}

function find_last_active_slide(slider_items) {
  // Функция возвращает номер последнего активного элемента в слайдере
  // Если нет активных, то возвращает null.
  for (var i = slider_items.length - 1; i >= 0; i--) {
    if (slider_items[i].classList.contains('slide_disable') == false) {
      return i;
    }
  }
  return null;
}

function prev_slide_handler() {
  // Обработчик нажатие на стрелочку '<'
  var count_active_slide = 10;
  var slider_items = document.getElementsByClassName('swiper_slide');

  var numb_first_active_slide = find_first_active_slide(slider_items);
  var numb_last_active_slide = find_last_active_slide(slider_items);

  if (numb_first_active_slide === -1 && numb_last_active_slide === -1) {
    console.log('Что-то пошло не так! Нет активных элементов.');
    return false;
  }

  if (numb_last_active_slide != slider_items.length - 1) {
    slider_items[numb_first_active_slide].classList.add('slide_disable');
    slider_items[numb_last_active_slide + 1].classList.remove('slide_disable');
  }
}

function next_slide_handler() {
  // Обработчик нажатие на стрелочку '>'
  var count_active_slide = 10;
  var slider_items = document.getElementsByClassName('swiper_slide');

  var numb_first_active_slide = find_first_active_slide(slider_items);
  var numb_last_active_slide = find_last_active_slide(slider_items);

  if (numb_first_active_slide === -1 && numb_last_active_slide === -1) {
    console.log('Что-то пошло не так! Нет активных элементов.');
    return false;
  }

  if (numb_last_active_slide != 0) {
    slider_items[numb_first_active_slide - 1].classList.remove('slide_disable');
    slider_items[numb_last_active_slide].classList.add('slide_disable');
  }
}

var set_handler_main_page_arrow = exports.set_handler_main_page_arrow = function set_handler_main_page_arrow() {
  // Навешиваем хендлеры на нажатие стрелочек
  var arrow_prev = document.getElementsByClassName('work_arrow_prev');
  if (arrow_prev.length > 0) {
    arrow_prev[0].addEventListener('click', prev_slide_handler);
  }

  var arrow_next = document.getElementsByClassName('work_arrow_next');
  if (arrow_next.length > 0) {
    arrow_next[0].addEventListener('click', next_slide_handler);
  }
};

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNTE0OWRmNjQ1YWMwM2I3MGY4ODciLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy90aW1ldGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21haW5fbWVudS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcyJdLCJuYW1lcyI6WyJpbnNlcnRfaWZyYW1lX3lvdXR1YmUiLCJsZXNzb25fZWxlbWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJsZW5ndGgiLCJpZnJhbWUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJtZWRpYSIsImRhdGFzZXQiLCJ1cmwiLCJhcHBlbmRDaGlsZCIsImhpZGVfbGVzc29uc19kZXNjcmlwdGlvbnMiLCJkZXNjcmlwdGlvbnMiLCJpIiwic3dpdGNoX2xlc3Nvbl9kZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwiY29udGFpbnMiLCJyZW1vdmUiLCJkaXNhYmxlX2J1dHRvbnMiLCJlbGVtZW50IiwiYnV0dG9ucyIsInNob3dfbW9udGhfbGVzc29uIiwibW9udGgiLCJjb3VudF9sZXNzb25zX2luX21vbnRoIiwibGVzc29ucyIsImVuZF9sZXNzb25faW5fbW9udGgiLCJiZWdpbl9sZXNzb25faW5fbW9udGgiLCJzd2l0Y2hfbW9udGhfbGVzc29uIiwicGFyZW50Tm9kZSIsImluZGV4T2YiLCJwYXJzZUludCIsInNsaWNlIiwic2V0X2hhbmRsZXJfdGltZXRhYmxlIiwibGVzc29uX3RpdGxlcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJiaW5kIiwiYnV0dG9uc19tb250aCIsInNob3dfZHJvcGRvd25fbWVudSIsImRyb3Bkb3duX21lbnUiLCJoaWRlX2Ryb3Bkb3duX21lbnUiLCJzZXRfaGFuZGxlcl9tYWluX21lbnUiLCJkcm9wZG93bl9tZW51cyIsImZpbmRfZmlyc3RfYWN0aXZlX3NsaWRlIiwic2xpZGVyX2l0ZW1zIiwiZmluZF9sYXN0X2FjdGl2ZV9zbGlkZSIsInByZXZfc2xpZGVfaGFuZGxlciIsImNvdW50X2FjdGl2ZV9zbGlkZSIsIm51bWJfZmlyc3RfYWN0aXZlX3NsaWRlIiwibnVtYl9sYXN0X2FjdGl2ZV9zbGlkZSIsImNvbnNvbGUiLCJsb2ciLCJuZXh0X3NsaWRlX2hhbmRsZXIiLCJzZXRfaGFuZGxlcl9tYWluX3BhZ2VfYXJyb3ciLCJhcnJvd19wcmV2IiwiYXJyb3dfbmV4dCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7Ozs7O0FDN0RBOztBQUNBOztBQUNBOztBQUdBO0FBQ0E7QUFDQSx3Qzs7Ozs7Ozs7Ozs7O0FDUEEsU0FBU0EscUJBQVQsQ0FBK0JDLGNBQS9CLEVBQStDO0FBQzdDLE1BQUlBLGVBQWVDLHNCQUFmLENBQXNDLGVBQXRDLEVBQXVEQyxNQUF2RCxHQUFnRSxDQUFwRSxFQUF1RTtBQUNyRSxXQUFPLEtBQVA7QUFDRDs7QUFFRCxNQUFJQyxTQUFTQyxTQUFTQyxhQUFULENBQXVCLFFBQXZCLENBQWI7QUFDQUYsU0FBT0csWUFBUCxDQUFvQixhQUFwQixFQUFtQyxHQUFuQztBQUNBSCxTQUFPSSxTQUFQLENBQWlCQyxHQUFqQixDQUFxQixlQUFyQjs7QUFFQSxNQUFJQyxRQUFRVCxlQUFlQyxz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QUF3QkMsWUFBeEIsQ0FBOUI7QUFDQSxNQUFJSyx5QkFBeUJKLHVCQUF1QkQsWUFBdkIsQ0FBN0I7O0FBRUEsTUFBS0ksNEJBQTRCLENBQUMsQ0FBOUIsSUFBcUNDLDJCQUEyQixDQUFDLENBQXJFLEVBQXlFO0FBQ3ZFQyxZQUFRQyxHQUFSLENBQVksOENBQVo7QUFDQSxXQUFPLEtBQVA7QUFDRDs7QUFFRCxNQUFJRiwwQkFBMEIsQ0FBOUIsRUFBaUM7QUFDL0JMLGlCQUFjSSwwQkFBd0IsQ0FBdEMsRUFBMEMxQyxTQUExQyxDQUFvRFksTUFBcEQsQ0FBMkQsZUFBM0Q7QUFDQTBCLGlCQUFjSyxzQkFBZCxFQUF1QzNDLFNBQXZDLENBQWlEQyxHQUFqRCxDQUFxRCxlQUFyRDtBQUNEO0FBQ0Y7O0FBR00sSUFBSThDLG9FQUE4QixTQUE5QkEsMkJBQThCLEdBQU07QUFDN0M7QUFDQSxNQUFJQyxhQUFhbkQsU0FBU0gsc0JBQVQsQ0FBZ0MsaUJBQWhDLENBQWpCO0FBQ0EsTUFBSXNELFdBQVdyRCxNQUFYLEdBQW9CLENBQXhCLEVBQTJCO0FBQ3pCcUQsZUFBVyxDQUFYLEVBQWNuQixnQkFBZCxDQUErQixPQUEvQixFQUF3Q1csa0JBQXhDO0FBQ0Q7O0FBRUQsTUFBSVMsYUFBYXBELFNBQVNILHNCQUFULENBQWdDLGlCQUFoQyxDQUFqQjtBQUNBLE1BQUl1RCxXQUFXdEQsTUFBWCxHQUFvQixDQUF4QixFQUEyQjtBQUN6QnNELGVBQVcsQ0FBWCxFQUFjcEIsZ0JBQWQsQ0FBK0IsT0FBL0IsRUFBd0NpQixrQkFBeEM7QUFDRDtBQUNGLENBWE0sQyIsImZpbGUiOiJidW5kbGUubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgNTE0OWRmNjQ1YWMwM2I3MGY4ODciLCJpbXBvcnQge3NldF9oYW5kbGVyX3RpbWV0YWJsZX0gZnJvbSAnLi90aW1ldGFibGUnO1xuaW1wb3J0IHtzZXRfaGFuZGxlcl9tYWluX21lbnV9IGZyb20gJy4vbWFpbl9tZW51JztcbmltcG9ydCB7c2V0X2hhbmRsZXJfbWFpbl9wYWdlX2Fycm93fSBmcm9tICcuL21haW4nO1xuXG5cbnNldF9oYW5kbGVyX21haW5fbWVudSgpO1xuc2V0X2hhbmRsZXJfbWFpbl9wYWdlX2Fycm93KCk7XG5zZXRfaGFuZGxlcl90aW1ldGFibGUoKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9pbmRleC5qcyIsImZ1bmN0aW9uIGluc2VydF9pZnJhbWVfeW91dHViZShsZXNzb25fZWxlbWVudCkge1xuICBpZiAobGVzc29uX2VsZW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbWVkaWFfX2lmcmFtZScpLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBsZXQgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gIGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ2ZyYW1lYm9yZGVyJywgJzAnKTtcbiAgaWZyYW1lLmNsYXNzTGlzdC5hZGQoJ21lZGlhX19pZnJhbWUnKVxuXG4gIGxldCBtZWRpYSA9IGxlc3Nvbl9lbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRlbnRfX21lZGlhJyk7XG4gIGlmIChtZWRpYS5sZW5ndGggIT09IDEpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZnJhbWUuc2V0QXR0cmlidXRlKCdzcmMnLCBtZWRpYVswXS5kYXRhc2V0LnVybCk7XG4gIG1lZGlhWzBdLmFwcGVuZENoaWxkKGlmcmFtZSlcbn1cblxuZnVuY3Rpb24gaGlkZV9sZXNzb25zX2Rlc2NyaXB0aW9ucygpIHtcbiAgbGV0IGRlc2NyaXB0aW9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xlc3Nvbl9fZGVzY3JpcHRpb24nKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkZXNjcmlwdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICBkZXNjcmlwdGlvbnNbaV0uY2xhc3NMaXN0LmFkZCgnbGVzc29uX19kZXNjcmlwdGlvbi0taGlkZGVuJylcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIHN3aXRjaF9sZXNzb25fZGVzY3JpcHRpb24gKCkge1xuICBsZXQgZGVzY3JpcHRpb24gPSB0aGlzLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xlc3Nvbl9fZGVzY3JpcHRpb24nKTtcblxuICBpZiAoZGVzY3JpcHRpb25bMF0uY2xhc3NMaXN0LmNvbnRhaW5zKCdsZXNzb25fX2Rlc2NyaXB0aW9uLS1oaWRkZW4nKSA9PT0gdHJ1ZSkge1xuICAgIGhpZGVfbGVzc29uc19kZXNjcmlwdGlvbnMoKTtcbiAgICBkZXNjcmlwdGlvblswXS5jbGFzc0xpc3QucmVtb3ZlKCdsZXNzb25fX2Rlc2NyaXB0aW9uLS1oaWRkZW4nKTtcbiAgICBpbnNlcnRfaWZyYW1lX3lvdXR1YmUodGhpcyk7XG4gIH0gZWxzZSB7XG4gICAgaGlkZV9sZXNzb25zX2Rlc2NyaXB0aW9ucygpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuXG5mdW5jdGlvbiBkaXNhYmxlX2J1dHRvbnMoZWxlbWVudCkge1xuICBsZXQgYnV0dG9ucyA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYnV0dG9ucy1tb250aF9faXRlbScpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1dHRvbnMubGVuZ3RoOyBpKyspIHtcbiAgICBidXR0b25zW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ2J1dHRvbnMtbW9udGhfX2l0ZW0tLWFjdGl2ZScpO1xuICB9XG59XG5cblxuZnVuY3Rpb24gc2hvd19tb250aF9sZXNzb24obW9udGgsIGNvdW50X2xlc3NvbnNfaW5fbW9udGgpIHtcblxuICBsZXQgbGVzc29ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xlc3NvbnNfX2l0ZW0nKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZXNzb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgbGVzc29uc1tpXS5jbGFzc0xpc3QuYWRkKCdsZXNzb25zX19pdGVtLS1oaWRkZW4nKTtcbiAgfVxuICBsZXQgZW5kX2xlc3Nvbl9pbl9tb250aCA9IGNvdW50X2xlc3NvbnNfaW5fbW9udGggKiBtb250aDtcbiAgbGV0IGJlZ2luX2xlc3Nvbl9pbl9tb250aCA9IGVuZF9sZXNzb25faW5fbW9udGggLSBjb3VudF9sZXNzb25zX2luX21vbnRoO1xuXG4gIGlmIChsZXNzb25zLmxlbmd0aCA8IGJlZ2luX2xlc3Nvbl9pbl9tb250aCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmIChsZXNzb25zLmxlbmd0aCA8IGVuZF9sZXNzb25faW5fbW9udGgpIHtcbiAgICBlbmRfbGVzc29uX2luX21vbnRoID0gbGVzc29ucy5sZW5ndGg7XG4gIH1cbiAgZm9yIChsZXQgaSA9IGJlZ2luX2xlc3Nvbl9pbl9tb250aDsgaSA8IGVuZF9sZXNzb25faW5fbW9udGg7IGkrKykge1xuICAgIGxlc3NvbnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnbGVzc29uc19faXRlbS0taGlkZGVuJyk7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBzd2l0Y2hfbW9udGhfbGVzc29uKCkge1xuICBsZXQgY291bnRfbGVzc29uc19pbl9tb250aCA9IDRcbiAgZGlzYWJsZV9idXR0b25zKHRoaXMucGFyZW50Tm9kZSk7XG4gIHRoaXMuY2xhc3NMaXN0LmFkZCgnYnV0dG9ucy1tb250aF9faXRlbS0tYWN0aXZlJyk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNsYXNzTGlzdC5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0aGlzLmNsYXNzTGlzdFtpXS5pbmRleE9mKCdtb250aC0nKSA9PT0gMCkge1xuICAgICAgLy8gJ21vbnRoLScubGVuZ3RoID09PSA2XG4gICAgICBsZXQgbW9udGggPSBwYXJzZUludCh0aGlzLmNsYXNzTGlzdFtpXS5zbGljZSg2KSwgMTApXG4gICAgICBzaG93X21vbnRoX2xlc3Nvbihtb250aCwgY291bnRfbGVzc29uc19pbl9tb250aClcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGxldCBzZXRfaGFuZGxlcl90aW1ldGFibGUgPSAoKSA9PiB7XG4gIC8vINCd0LDQstC10YjQuNCy0LDQtdC8INGF0LXQvdC00LvQtdGA0Ysg0L3QsCDQvdCw0LbQsNGC0LjQtSDQvdCwINC30LDQs9C+0LvQvtCy0L7QuiDRg9GA0L7QutCwXG4gIGxldCBsZXNzb25fdGl0bGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGVzc29uLXRpdHRsZV9fdGV4dCcpO1xuICBpZiAobGVzc29uX3RpdGxlcy5sZW5ndGggPiAwKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZXNzb25fdGl0bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXNzb25fdGl0bGVzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dpdGNoX2xlc3Nvbl9kZXNjcmlwdGlvbi5iaW5kKGxlc3Nvbl90aXRsZXNbaV0ucGFyZW50Tm9kZSkpO1xuICAgIH1cbiAgfVxuXG4gIC8vINCd0LDQstC10YjQuNCy0LDQtdC8INGF0LXQvdC00LvQtdGA0Ysg0L3QsCDQvdCw0LbQsNGC0LjQtSDQvdCwINC60L3QvtC/0LrQuCDQstGL0LHQvtGA0LAg0LzQtdGB0Y/RhtCwXG4gIGxldCBidXR0b25zX21vbnRoID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYnV0dG9ucy1tb250aF9faXRlbScpO1xuICBpZiAoYnV0dG9uc19tb250aC5sZW5ndGggPiAwKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidXR0b25zX21vbnRoLmxlbmd0aDsgaSsrKSB7XG4gICAgICBidXR0b25zX21vbnRoW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dpdGNoX21vbnRoX2xlc3Nvbi5iaW5kKGJ1dHRvbnNfbW9udGhbaV0pKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy90aW1ldGFibGUuanMiLCJmdW5jdGlvbiBzaG93X2Ryb3Bkb3duX21lbnUoKSB7XG4gIGxldCBkcm9wZG93bl9tZW51ID0gdGhpcy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkcm9wZG93bi1qcycpO1xuICBpZiAoZHJvcGRvd25fbWVudS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGRyb3Bkb3duX21lbnVbMF0uY2xhc3NMaXN0LnJlbW92ZSgnZHJvcGRvd24taGlkZScpO1xufVxuXG5mdW5jdGlvbiBoaWRlX2Ryb3Bkb3duX21lbnUoKSB7XG4gIGxldCBkcm9wZG93bl9tZW51ID0gdGhpcy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkcm9wZG93bi1qcycpO1xuICBpZiAoZHJvcGRvd25fbWVudS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGRyb3Bkb3duX21lbnVbMF0uY2xhc3NMaXN0LmFkZCgnZHJvcGRvd24taGlkZScpO1xufVxuXG5leHBvcnQgbGV0IHNldF9oYW5kbGVyX21haW5fbWVudSA9ICgpID0+IHtcbiAgLy8g0J3QsNCy0LXRiNC40LLQsNC10Lwg0YXQtdC90LTQu9C10YDRiyDQvdCwINC90LDQttCw0YLQuNC1INC90LAg0LfQsNCz0L7Qu9C+0LLQvtC6INGD0YDQvtC60LBcbiAgbGV0IGRyb3Bkb3duX21lbnVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZHJvcGRvd24tanMtY29udHJvbCcpO1xuICBpZiAoZHJvcGRvd25fbWVudXMubGVuZ3RoID4gMCkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZHJvcGRvd25fbWVudXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGRyb3Bkb3duX21lbnVzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIHNob3dfZHJvcGRvd25fbWVudS5iaW5kKGRyb3Bkb3duX21lbnVzW2ldKSk7XG4gICAgICBkcm9wZG93bl9tZW51c1tpXS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIGhpZGVfZHJvcGRvd25fbWVudS5iaW5kKGRyb3Bkb3duX21lbnVzW2ldKSk7XG4gICAgfVxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbWFpbl9tZW51LmpzIiwiZnVuY3Rpb24gZmluZF9maXJzdF9hY3RpdmVfc2xpZGUoc2xpZGVyX2l0ZW1zKSB7XG4gIC8vINCk0YPQvdC60YbQuNGPINCy0L7Qt9Cy0YDQsNGJ0LDQtdGCINC90L7QvNC10YAg0L/QtdGA0LLQvtCz0L4g0LDQutGC0LjQstC90L7Qs9C+INGN0LvQtdC80LXQvdGC0LAg0LIg0YHQu9Cw0LnQtNC10YDQtVxuICAvLyDQldGB0LvQuCDQvdC10YIg0LDQutGC0LjQstC90YvRhSwg0YLQviDQstC+0LfQstGA0LDRidCw0LXRgiBudWxsLlxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlcl9pdGVtcy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzbGlkZXJfaXRlbXNbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKCdzbGlkZV9kaXNhYmxlJykgPT0gZmFsc2UpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuXG5mdW5jdGlvbiBmaW5kX2xhc3RfYWN0aXZlX3NsaWRlKHNsaWRlcl9pdGVtcykge1xuICAvLyDQpNGD0L3QutGG0LjRjyDQstC+0LfQstGA0LDRidCw0LXRgiDQvdC+0LzQtdGAINC/0L7RgdC70LXQtNC90LXQs9C+INCw0LrRgtC40LLQvdC+0LPQviDRjdC70LXQvNC10L3RgtCwINCyINGB0LvQsNC50LTQtdGA0LVcbiAgLy8g0JXRgdC70Lgg0L3QtdGCINCw0LrRgtC40LLQvdGL0YUsINGC0L4g0LLQvtC30LLRgNCw0YnQsNC10YIgbnVsbC5cbiAgZm9yIChsZXQgaSA9IChzbGlkZXJfaXRlbXMubGVuZ3RoIC0gMSk7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKHNsaWRlcl9pdGVtc1tpXS5jbGFzc0xpc3QuY29udGFpbnMoJ3NsaWRlX2Rpc2FibGUnKSA9PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIGk7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5cbmZ1bmN0aW9uIHByZXZfc2xpZGVfaGFuZGxlcigpIHtcbiAgLy8g0J7QsdGA0LDQsdC+0YLRh9C40Log0L3QsNC20LDRgtC40LUg0L3QsCDRgdGC0YDQtdC70L7Rh9C60YMgJzwnXG4gIGxldCBjb3VudF9hY3RpdmVfc2xpZGUgPSAxMDtcbiAgbGV0IHNsaWRlcl9pdGVtcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N3aXBlcl9zbGlkZScpO1xuXG4gIGxldCBudW1iX2ZpcnN0X2FjdGl2ZV9zbGlkZSA9IGZpbmRfZmlyc3RfYWN0aXZlX3NsaWRlKHNsaWRlcl9pdGVtcylcbiAgbGV0IG51bWJfbGFzdF9hY3RpdmVfc2xpZGUgPSBmaW5kX2xhc3RfYWN0aXZlX3NsaWRlKHNsaWRlcl9pdGVtcylcblxuICBpZiAoKG51bWJfZmlyc3RfYWN0aXZlX3NsaWRlID09PSAtMSkgJiYgKG51bWJfbGFzdF9hY3RpdmVfc2xpZGUgPT09IC0xKSkge1xuICAgIGNvbnNvbGUubG9nKCfQp9GC0L4t0YLQviDQv9C+0YjQu9C+INC90LUg0YLQsNC6ISDQndC10YIg0LDQutGC0LjQstC90YvRhSDRjdC70LXQvNC10L3RgtC+0LIuJyk7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBpZiAobnVtYl9sYXN0X2FjdGl2ZV9zbGlkZSAhPSBzbGlkZXJfaXRlbXMubGVuZ3RoLTEpIHtcbiAgICBzbGlkZXJfaXRlbXNbKG51bWJfZmlyc3RfYWN0aXZlX3NsaWRlKV0uY2xhc3NMaXN0LmFkZCgnc2xpZGVfZGlzYWJsZScpXG4gICAgc2xpZGVyX2l0ZW1zWyhudW1iX2xhc3RfYWN0aXZlX3NsaWRlKzEpXS5jbGFzc0xpc3QucmVtb3ZlKCdzbGlkZV9kaXNhYmxlJylcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIG5leHRfc2xpZGVfaGFuZGxlcigpIHtcbiAgLy8g0J7QsdGA0LDQsdC+0YLRh9C40Log0L3QsNC20LDRgtC40LUg0L3QsCDRgdGC0YDQtdC70L7Rh9C60YMgJz4nXG4gIGxldCBjb3VudF9hY3RpdmVfc2xpZGUgPSAxMDtcbiAgbGV0IHNsaWRlcl9pdGVtcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N3aXBlcl9zbGlkZScpO1xuXG4gIGxldCBudW1iX2ZpcnN0X2FjdGl2ZV9zbGlkZSA9IGZpbmRfZmlyc3RfYWN0aXZlX3NsaWRlKHNsaWRlcl9pdGVtcylcbiAgbGV0IG51bWJfbGFzdF9hY3RpdmVfc2xpZGUgPSBmaW5kX2xhc3RfYWN0aXZlX3NsaWRlKHNsaWRlcl9pdGVtcylcblxuICBpZiAoKG51bWJfZmlyc3RfYWN0aXZlX3NsaWRlID09PSAtMSkgJiYgKG51bWJfbGFzdF9hY3RpdmVfc2xpZGUgPT09IC0xKSkge1xuICAgIGNvbnNvbGUubG9nKCfQp9GC0L4t0YLQviDQv9C+0YjQu9C+INC90LUg0YLQsNC6ISDQndC10YIg0LDQutGC0LjQstC90YvRhSDRjdC70LXQvNC10L3RgtC+0LIuJyk7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBpZiAobnVtYl9sYXN0X2FjdGl2ZV9zbGlkZSAhPSAwKSB7XG4gICAgc2xpZGVyX2l0ZW1zWyhudW1iX2ZpcnN0X2FjdGl2ZV9zbGlkZS0xKV0uY2xhc3NMaXN0LnJlbW92ZSgnc2xpZGVfZGlzYWJsZScpXG4gICAgc2xpZGVyX2l0ZW1zWyhudW1iX2xhc3RfYWN0aXZlX3NsaWRlKV0uY2xhc3NMaXN0LmFkZCgnc2xpZGVfZGlzYWJsZScpXG4gIH1cbn1cblxuXG5leHBvcnQgbGV0IHNldF9oYW5kbGVyX21haW5fcGFnZV9hcnJvdyA9ICgpID0+IHtcbiAgLy8g0J3QsNCy0LXRiNC40LLQsNC10Lwg0YXQtdC90LTQu9C10YDRiyDQvdCwINC90LDQttCw0YLQuNC1INGB0YLRgNC10LvQvtGH0LXQulxuICBsZXQgYXJyb3dfcHJldiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3dvcmtfYXJyb3dfcHJldicpO1xuICBpZiAoYXJyb3dfcHJldi5sZW5ndGggPiAwKSB7XG4gICAgYXJyb3dfcHJldlswXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHByZXZfc2xpZGVfaGFuZGxlcik7XG4gIH1cblxuICBsZXQgYXJyb3dfbmV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3dvcmtfYXJyb3dfbmV4dCcpO1xuICBpZiAoYXJyb3dfbmV4dC5sZW5ndGggPiAwKSB7XG4gICAgYXJyb3dfbmV4dFswXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG5leHRfc2xpZGVfaGFuZGxlcik7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tYWluLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==